{"remainingRequest":"/var/www/html/new-project-portal/vue-main-front/node_modules/babel-loader/lib/index.js!/var/www/html/new-project-portal/vue-main-front/node_modules/cache-loader/dist/cjs.js??ref--0-0!/var/www/html/new-project-portal/vue-main-front/node_modules/vue-loader/lib/index.js??vue-loader-options!/var/www/html/new-project-portal/vue-main-front/src/components/inventory/inventory.vue?vue&type=script&lang=js&","dependencies":[{"path":"/var/www/html/new-project-portal/vue-main-front/src/components/inventory/inventory.vue","mtime":1623202288261},{"path":"/var/www/html/new-project-portal/vue-main-front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/var/www/html/new-project-portal/vue-main-front/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/var/www/html/new-project-portal/vue-main-front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/var/www/html/new-project-portal/vue-main-front/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvd2ViLmRvbS1jb2xsZWN0aW9ucy5mb3ItZWFjaC5qcyI7CgovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwp2YXIgYXhpb3MgPSByZXF1aXJlKCJheGlvcyIpOwoKdmFyIHRva2VuID0gbG9jYWxTdG9yYWdlLmdldEl0ZW0oInVzZXItdG9rZW4iKTsKdmFyIGluc3RhbmNlID0gYXhpb3MuY3JlYXRlKHsKICBiYXNlVVJMOiAiaHR0cDovL2xvY2FsaG9zdDo4MDAwL2FwaS8iLAogIGhlYWRlcnM6IHsKICAgIEF1dGhvcml6YXRpb246ICJCZWFyZXIgIiArIHRva2VuCiAgfQp9KTsKdmFyIGRlZmF1bHRJdGVtID0gewogIHNlbmRlcjogIiIsCiAgYnJhbmNoOiAiIiwKICBzdGF0dXM6ICIiLAogIGFzb2Y6ICIiLAogIGNyZWF0ZWQ6ICIiCn07CnZhciBJbnZlbnRvcnlDb2x1bW5zID0gW3sKICBuYW1lOiAic2VuZGVyIiwKICBhbGlnbjogImxlZnQiLAogIGxhYmVsOiAiU2VuZGVyIiwKICBmaWVsZDogInNlbmRlciIsCiAgc29ydGFibGU6IHRydWUKfSwgewogIG5hbWU6ICJicmFuY2giLAogIGFsaWduOiAibGVmdCIsCiAgbGFiZWw6ICJCcmFuY2giLAogIGZpZWxkOiAiYnJhbmNoIiwKICBzb3J0YWJsZTogdHJ1ZQp9LCB7CiAgbmFtZTogInN0YXR1cyIsCiAgYWxpZ246ICJsZWZ0IiwKICBsYWJlbDogIlN0YXR1cyIsCiAgZmllbGQ6ICJzdGF0IiwKICBzb3J0YWJsZTogdHJ1ZQp9LCB7CiAgbmFtZTogImNyZWF0ZWQiLAogIGFsaWduOiAibGVmdCIsCiAgbGFiZWw6ICJEYXRlIENyZWF0ZWQiLAogIGZpZWxkOiAiY3JlYXRlZF9hdCIsCiAgc29ydGFibGU6IHRydWUKfSwgewogIG5hbWU6ICJhc29mIiwKICBhbGlnbjogImxlZnQiLAogIGxhYmVsOiAiQXNfT2YiLAogIGZpZWxkOiAiYXNvZiIsCiAgc29ydGFibGU6IHRydWUKfSwgewogIG5hbWU6ICJhY3Rpb24iLAogIGFsaWduOiAicmlnaHQiLAogIGxhYmVsOiAiQWN0aW9uIiwKICBmaWVsZDogImFjdGlvbiIKfV07CnZhciBJbnZlbnRvcnljRGF0YSA9IFtdOwpleHBvcnQgZGVmYXVsdCB7CiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIGRhdGF1cmw6ICIiLAogICAgICBkaWFsb2c6IGZhbHNlLAogICAgICBtYXhpbWl6ZWRUb2dnbGU6IHRydWUsCiAgICAgIGluRnM6IGZhbHNlLAogICAgICBub3RpOiBmdW5jdGlvbiBub3RpKCkge30sCiAgICAgIHNob3dfZGlhbG9nOiBmYWxzZSwKICAgICAgZWRpdGVkSW5kZXg6IC0xLAogICAgICBlZGl0ZWRJdGVtOiBkZWZhdWx0SXRlbSwKICAgICAgZmlsdGVyOiAiIiwKICAgICAgbW9kZTogImxpc3QiLAogICAgICBjb2RlOiBudWxsLAogICAgICBJbnZlbnRvcnlDb2x1bW5zOiBJbnZlbnRvcnlDb2x1bW5zLAogICAgICBJbnZlbnRvcnljRGF0YTogSW52ZW50b3J5Y0RhdGEsCiAgICAgIHBhZ2luYXRpb246IHsKICAgICAgICBwYWdlOiAxCiAgICAgIH0sCiAgICAgIHBhZ2U6IDEsCiAgICAgIHRvdGFsUmVjb3JkOiAwLAogICAgICBwYWdlQ291bnQ6IDEKICAgIH07CiAgfSwKICBtZXRob2RzOiB7CiAgICByZW5kZXI6IGZ1bmN0aW9uIHJlbmRlcigpIHsKICAgICAgdmFyIF90aGlzID0gdGhpczsKCiAgICAgIGluc3RhbmNlLmdldCgiL2ludmVudG9yeS9pbmRleCIpLnRoZW4oZnVuY3Rpb24gKHJlcykgewogICAgICAgIF90aGlzLkludmVudG9yeWNEYXRhID0gcmVzLmRhdGE7CiAgICAgICAgcmVzLmRhdGEuZm9yRWFjaChmdW5jdGlvbiAoZWxlbWVudCwgaW5kZXgpIHsKICAgICAgICAgIHZhciBpc251bGwgPSAiQ29tcGxldGUiOwogICAgICAgICAgZWxlbWVudC5pbnZ0eV9saXN0LmZvckVhY2goZnVuY3Rpb24gKHJlcykgewogICAgICAgICAgICBjb25zb2xlLmxvZyhyZXMubWUpOwoKICAgICAgICAgICAgaWYgKCFyZXMucGh5KSB7CiAgICAgICAgICAgICAgaXNudWxsID0gIkluY29tcGxldGUiOwogICAgICAgICAgICB9CiAgICAgICAgICB9KTsKICAgICAgICAgIF90aGlzLkludmVudG9yeWNEYXRhW2luZGV4XS5zdGF0ID0gaXNudWxsOwogICAgICAgIH0pOwogICAgICB9KTsKICAgIH0KICB9LAogIG1vdW50ZWQ6IGZ1bmN0aW9uIG1vdW50ZWQoKSB7CiAgICB0aGlzLnJlbmRlcigpOwogIH0KfTs="},{"version":3,"sources":["inventory.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"q-pa-md\">\n    <div class=\"row q-col-gutter-sm\">\n      <div class=\"col\">\n        <div style=\"margin-bottom: 12px\">\n          <q-btn\n            icon=\"fas fa-file-import\"\n            to=\"/inventory/import\"\n            color=\"teal\"\n          ></q-btn>\n        </div>\n        <q-table\n          dense\n          flat\n          bordered\n          class=\"statement-table\"\n          title=\"Branch Inventory\"\n          :data=\"InventorycData\"\n          :hide-header=\"mode === 'grid'\"\n          :columns=\"InventoryColumns\"\n          row-key=\"__index\"\n          :grid=\"mode == 'grid'\"\n          :filter=\"filter\"\n          virtual-scroll\n        >\n          <template v-slot:top-right=\"\">\n            <q-input\n              outlined\n              dense\n              debounce=\"300\"\n              v-model=\"filter\"\n              placeholder=\"Search\"\n            >\n              <template v-slot:append>\n                <q-icon name=\"search\" />\n              </template>\n            </q-input>\n            <q-btn\n              flat\n              round\n              dense\n              :icon=\"mode === 'grid' ? 'list' : 'grid_on'\"\n              @click=\"mode = mode === 'grid' ? 'list' : 'grid'\"\n            >\n              <q-tooltip :disable=\"$q.platform.is.mobile\" v-close-popup>{{\n                mode === \"grid\" ? \"List\" : \"Grid\"\n              }}</q-tooltip>\n            </q-btn>\n            <div class=\"q-pa-sm q-gutter-sm\"></div>\n          </template>\n\n          <template #body-cell-sender=\"props\">\n            <q-td :props=\"props\">\n              <strong>{{ props.row.user.email }}</strong>\n            </q-td>\n          </template>\n          <template #body-cell-branch=\"props\">\n            <q-td :props=\"props\">\n              <strong>\n                <p>{{ props.row.branch.branch }}</p></strong\n              >\n            </q-td>\n          </template>\n          <template #body-cell-created=\"props\">\n            <q-td :props=\"props\">\n              {{ new Date(props.row.created_at) }}\n            </q-td>\n          </template>\n   \n          <template #body-cell-asof=\"props\">\n            <q-td :props=\"props\">\n              <q-chip color=\"teal\"\n                ><strong>{{ props.row.as_of }}</strong></q-chip\n              >\n            </q-td>\n          </template>\n          <template #body-cell-action=\"props\">\n            <q-td :props=\"props\">\n              <q-btn\n                dense\n                flat\n                round\n                color=\"blue\"\n                field=\"edit\"\n                icon=\"far fa-eye\"\n                :to=\"{\n                  name: 'inventory_info',\n                  params: {\n                    branch: props.row.branch_id,\n                    asof: props.row.as_of,\n                  },\n                }\"\n              ></q-btn>\n              <q-btn\n                v-if=\"props.row.stat == 'Complete'\"\n                dense\n                flat\n                round\n                hint=\"Reconcilation\"\n                color=\"blue\"\n                field=\"edit\"\n                icon=\"fas fa-file-contract\"\n                :to=\"{\n                  name: 'inventory_recon',\n                  params: {\n                    branch: props.row.branch_id,\n                    asof: props.row.as_of,\n                  },\n                }\"\n              >\n                <q-tooltip\n                  anchor=\"center right\"\n                  self=\"center left\"\n                  :offset=\"[10, 10]\"\n                >\n                  Reconcilation\n                  <q-icon name=\"keyboard_arrow_right\" />\n                </q-tooltip>\n              </q-btn>\n            </q-td>\n          </template>\n        </q-table>\n      </div>\n    </div>\n    <q-dialog\n      v-model=\"dialog\"\n      persistent\n      :maximized=\"maximizedToggle\"\n      transition-show=\"slide-up\"\n      transition-hide=\"slide-down\"\n      ><q-card class=\"bg-glossy text-white\">\n        <q-bar>\n          <q-space />\n          <q-btn\n            dense\n            flat\n            icon=\"minimize\"\n            @click=\"maximizedToggle = false\"\n            :disable=\"!maximizedToggle\"\n          >\n            <q-tooltip\n              v-if=\"maximizedToggle\"\n              content-class=\"bg-white text-primary\"\n              >Minimize</q-tooltip\n            >\n          </q-btn>\n          <q-btn\n            dense\n            flat\n            icon=\"crop_square\"\n            @click=\"maximizedToggle = true\"\n            :disable=\"maximizedToggle\"\n          >\n            <q-tooltip\n              v-if=\"!maximizedToggle\"\n              content-class=\"bg-white text-primary\"\n              >Maximize</q-tooltip\n            >\n          </q-btn>\n          <q-btn dense flat icon=\"close\" v-close-popup>\n            <q-tooltip content-class=\"bg-white text-primary\">Close</q-tooltip>\n          </q-btn>\n        </q-bar>\n\n        <q-card-section>\n          <iframe\n            :src=\"code\"\n            height=\"900px\"\n            width=\"700px\"\n            title=\"Iframe Example\"\n          ></iframe>\n        </q-card-section>\n      </q-card>\n    </q-dialog>\n  </div>\n</template>\n\n<script>\nconst axios = require(\"axios\");\nconst token = localStorage.getItem(\"user-token\");\nconst instance = axios.create({\n  baseURL: \"http://localhost:8000/api/\",\n  headers: {\n    Authorization: \"Bearer \" + token,\n  },\n});\nconst defaultItem = {\n  sender: \"\",\n  branch: \"\",\n  status: \"\",\n  asof: \"\",\n  created: \"\",\n};\n\nconst InventoryColumns = [\n  {\n    name: \"sender\",\n    align: \"left\",\n    label: \"Sender\",\n    field: \"sender\",\n    sortable: true,\n  },\n  {\n    name: \"branch\",\n    align: \"left\",\n    label: \"Branch\",\n    field: \"branch\",\n    sortable: true,\n  },\n  {\n    name: \"status\",\n    align: \"left\",\n    label: \"Status\",\n    field: \"stat\",\n    sortable: true,\n  },\n  {\n    name: \"created\",\n    align: \"left\",\n    label: \"Date Created\",\n    field: \"created_at\",\n    sortable: true,\n  },\n  {\n    name: \"asof\",\n    align: \"left\",\n    label: \"As_Of\",\n    field: \"asof\",\n    sortable: true,\n  },\n  {\n    name: \"action\",\n    align: \"right\",\n    label: \"Action\",\n    field: \"action\",\n  },\n];\nconst InventorycData = [];\n\nexport default {\n  data() {\n    return {\n      dataurl: \"\",\n      dialog: false,\n      maximizedToggle: true,\n      inFs: false,\n      noti: () => {},\n      show_dialog: false,\n      editedIndex: -1,\n      editedItem: defaultItem,\n      filter: \"\",\n      mode: \"list\",\n      code: null,\n      InventoryColumns: InventoryColumns,\n      InventorycData: InventorycData,\n      pagination: {\n        page: 1,\n      },\n      page: 1,\n      totalRecord: 0,\n      pageCount: 1,\n    };\n  },\n  methods: {\n    render() {\n      instance.get(\"/inventory/index\").then((res) => {\n        this.InventorycData = res.data;\n       \n        res.data.forEach((element,index) => {\n            let isnull = \"Complete\";\n           element.invty_list.forEach((res)=>{\n             console.log(res.me);\n              if(!res.phy){\n                isnull = \"Incomplete\";\n              }\n           })\n           this.InventorycData[index].stat = isnull;\n        });\n       \n      });\n    },\n  },\n\n  mounted() {\n    this.render();\n  },\n};\n</script>"],"sourceRoot":"src/components/inventory"}]}