{"remainingRequest":"/var/www/html/new-project-portal/vue-main-front/node_modules/vue-loader/lib/index.js??vue-loader-options!/var/www/html/new-project-portal/vue-main-front/src/components/inventory/inventory.vue?vue&type=script&lang=js&","dependencies":[{"path":"/var/www/html/new-project-portal/vue-main-front/src/components/inventory/inventory.vue","mtime":1623132783917},{"path":"/var/www/html/new-project-portal/vue-main-front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/var/www/html/new-project-portal/vue-main-front/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/var/www/html/new-project-portal/vue-main-front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/var/www/html/new-project-portal/vue-main-front/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmNvbnN0IGF4aW9zID0gcmVxdWlyZSgiYXhpb3MiKTsKY29uc3QgdG9rZW4gPSBsb2NhbFN0b3JhZ2UuZ2V0SXRlbSgidXNlci10b2tlbiIpOwpjb25zdCBpbnN0YW5jZSA9IGF4aW9zLmNyZWF0ZSh7CiAgYmFzZVVSTDogImh0dHA6Ly9sb2NhbGhvc3Q6ODAwMC9hcGkvIiwKICBoZWFkZXJzOiB7CiAgICBBdXRob3JpemF0aW9uOiAiQmVhcmVyICIgKyB0b2tlbiwKICB9LAp9KTsKY29uc3QgZGVmYXVsdEl0ZW0gPSB7CiAgc2VuZGVyOiAiIiwKICBicmFuY2g6ICIiLAogIHN0YXR1czogIiIsCiAgYXNvZjogIiIsCiAgY3JlYXRlZDogIiIsCn07Cgpjb25zdCBJbnZlbnRvcnlDb2x1bW5zID0gWwogIHsKICAgIG5hbWU6ICJzZW5kZXIiLAogICAgYWxpZ246ICJsZWZ0IiwKICAgIGxhYmVsOiAiU2VuZGVyIiwKICAgIGZpZWxkOiAic2VuZGVyIiwKICAgIHNvcnRhYmxlOiB0cnVlLAogIH0sCiAgewogICAgbmFtZTogImJyYW5jaCIsCiAgICBhbGlnbjogImxlZnQiLAogICAgbGFiZWw6ICJCcmFuY2giLAogICAgZmllbGQ6ICJicmFuY2giLAogICAgc29ydGFibGU6IHRydWUsCiAgfSwKICB7CiAgICBuYW1lOiAic3RhdHVzIiwKICAgIGFsaWduOiAibGVmdCIsCiAgICBsYWJlbDogIlN0YXR1cyIsCiAgICBmaWVsZDogInN0YXQiLAogICAgc29ydGFibGU6IHRydWUsCiAgfSwKICB7CiAgICBuYW1lOiAiY3JlYXRlZCIsCiAgICBhbGlnbjogImxlZnQiLAogICAgbGFiZWw6ICJEYXRlIENyZWF0ZWQiLAogICAgZmllbGQ6ICJjcmVhdGVkX2F0IiwKICAgIHNvcnRhYmxlOiB0cnVlLAogIH0sCiAgewogICAgbmFtZTogImFzb2YiLAogICAgYWxpZ246ICJsZWZ0IiwKICAgIGxhYmVsOiAiQXNfT2YiLAogICAgZmllbGQ6ICJhc29mIiwKICAgIHNvcnRhYmxlOiB0cnVlLAogIH0sCiAgewogICAgbmFtZTogImFjdGlvbiIsCiAgICBhbGlnbjogInJpZ2h0IiwKICAgIGxhYmVsOiAiQWN0aW9uIiwKICAgIGZpZWxkOiAiYWN0aW9uIiwKICB9LApdOwpjb25zdCBJbnZlbnRvcnljRGF0YSA9IFtdOwoKZXhwb3J0IGRlZmF1bHQgewogIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBkYXRhdXJsOiAiIiwKICAgICAgZGlhbG9nOiBmYWxzZSwKICAgICAgbWF4aW1pemVkVG9nZ2xlOiB0cnVlLAogICAgICBpbkZzOiBmYWxzZSwKICAgICAgbm90aTogKCkgPT4ge30sCiAgICAgIHNob3dfZGlhbG9nOiBmYWxzZSwKICAgICAgZWRpdGVkSW5kZXg6IC0xLAogICAgICBlZGl0ZWRJdGVtOiBkZWZhdWx0SXRlbSwKICAgICAgZmlsdGVyOiAiIiwKICAgICAgbW9kZTogImxpc3QiLAogICAgICBjb2RlOiBudWxsLAogICAgICBJbnZlbnRvcnlDb2x1bW5zOiBJbnZlbnRvcnlDb2x1bW5zLAogICAgICBJbnZlbnRvcnljRGF0YTogSW52ZW50b3J5Y0RhdGEsCiAgICAgIHBhZ2luYXRpb246IHsKICAgICAgICBwYWdlOiAxLAogICAgICB9LAogICAgICBwYWdlOiAxLAogICAgICB0b3RhbFJlY29yZDogMCwKICAgICAgcGFnZUNvdW50OiAxLAogICAgfTsKICB9LAogIG1ldGhvZHM6IHsKICAgIHJlbmRlcigpIHsKICAgICAgaW5zdGFuY2UuZ2V0KCIvaW52ZW50b3J5L2luZGV4IikudGhlbigocmVzKSA9PiB7CiAgICAgICAgdGhpcy5JbnZlbnRvcnljRGF0YSA9IHJlcy5kYXRhOwogICAgICAgCiAgICAgICAgcmVzLmRhdGEuZm9yRWFjaCgoZWxlbWVudCxpbmRleCkgPT4gewogICAgICAgICAgICBsZXQgaXNudWxsID0gIkNvbXBsZXRlIjsKICAgICAgICAgICBlbGVtZW50LmludnR5X2xpc3QuZm9yRWFjaCgocmVzKT0+ewogICAgICAgICAgICAgY29uc29sZS5sb2cocmVzLm1lKTsKICAgICAgICAgICAgICBpZighcmVzLnBoeSl7CiAgICAgICAgICAgICAgICBpc251bGwgPSAiSW5jb21wbGV0ZSI7CiAgICAgICAgICAgICAgfQogICAgICAgICAgIH0pCiAgICAgICAgICAgdGhpcy5JbnZlbnRvcnljRGF0YVtpbmRleF0uc3RhdCA9IGlzbnVsbDsKICAgICAgICB9KTsKICAgICAgIAogICAgICB9KTsKICAgIH0sCiAgfSwKCiAgbW91bnRlZCgpIHsKICAgIHRoaXMucmVuZGVyKCk7CiAgfSwKfTsK"},{"version":3,"sources":["inventory.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA","file":"inventory.vue","sourceRoot":"src/components/inventory","sourcesContent":["<template>\n  <div class=\"q-pa-md\">\n    <div class=\"row q-col-gutter-sm\">\n      <div class=\"col\">\n        <div style=\"margin-bottom: 12px\">\n          <q-btn\n            icon=\"fas fa-file-import\"\n            to=\"/inventory/import\"\n            color=\"teal\"\n          ></q-btn>\n        </div>\n        <q-table\n          flat\n          bordered\n          class=\"statement-table\"\n          title=\"Branch Inventory\"\n          :data=\"InventorycData\"\n          :hide-header=\"mode === 'grid'\"\n          :columns=\"InventoryColumns\"\n          row-key=\"__index\"\n          :grid=\"mode == 'grid'\"\n          :filter=\"filter\"\n          virtual-scroll\n        >\n          <template v-slot:top-right=\"\">\n            <q-input\n              outlined\n              dense\n              debounce=\"300\"\n              v-model=\"filter\"\n              placeholder=\"Search\"\n            >\n              <template v-slot:append>\n                <q-icon name=\"search\" />\n              </template>\n            </q-input>\n            <q-btn\n              flat\n              round\n              dense\n              :icon=\"mode === 'grid' ? 'list' : 'grid_on'\"\n              @click=\"mode = mode === 'grid' ? 'list' : 'grid'\"\n            >\n              <q-tooltip :disable=\"$q.platform.is.mobile\" v-close-popup>{{\n                mode === \"grid\" ? \"List\" : \"Grid\"\n              }}</q-tooltip>\n            </q-btn>\n            <div class=\"q-pa-sm q-gutter-sm\"></div>\n          </template>\n\n          <template #body-cell-sender=\"props\">\n            <q-td :props=\"props\">\n              <strong>{{ props.row.user.email }}</strong>\n            </q-td>\n          </template>\n          <template #body-cell-branch=\"props\">\n            <q-td :props=\"props\">\n              <strong>\n                <p>{{ props.row.branch.branch }}</p></strong\n              >\n            </q-td>\n          </template>\n          <template #body-cell-created=\"props\">\n            <q-td :props=\"props\">\n              {{ new Date(props.row.created_at) }}\n            </q-td>\n          </template>\n   \n          <template #body-cell-asof=\"props\">\n            <q-td :props=\"props\">\n              <q-chip color=\"teal\"\n                ><strong>{{ props.row.as_of }}</strong></q-chip\n              >\n            </q-td>\n          </template>\n          <template #body-cell-action=\"props\">\n            <q-td :props=\"props\">\n              <q-btn\n                dense\n                flat\n                round\n                color=\"blue\"\n                field=\"edit\"\n                icon=\"far fa-eye\"\n                :to=\"{\n                  name: 'inventory_info',\n                  params: {\n                    branch: props.row.branch_id,\n                    asof: props.row.as_of,\n                  },\n                }\"\n              ></q-btn>\n              <q-btn\n                v-if=\"props.row.stat == 'Complete'\"\n                dense\n                flat\n                round\n                hint=\"Reconcilation\"\n                color=\"blue\"\n                field=\"edit\"\n                icon=\"fas fa-file-contract\"\n                :to=\"{\n                  name: 'inventory_recon',\n                  params: {\n                    branch: props.row.branch_id,\n                    asof: props.row.as_of,\n                  },\n                }\"\n              >\n                <q-tooltip\n                  anchor=\"center right\"\n                  self=\"center left\"\n                  :offset=\"[10, 10]\"\n                >\n                  Reconcilation\n                  <q-icon name=\"keyboard_arrow_right\" />\n                </q-tooltip>\n              </q-btn>\n            </q-td>\n          </template>\n        </q-table>\n      </div>\n    </div>\n    <q-dialog\n      v-model=\"dialog\"\n      persistent\n      :maximized=\"maximizedToggle\"\n      transition-show=\"slide-up\"\n      transition-hide=\"slide-down\"\n      ><q-card class=\"bg-glossy text-white\">\n        <q-bar>\n          <q-space />\n          <q-btn\n            dense\n            flat\n            icon=\"minimize\"\n            @click=\"maximizedToggle = false\"\n            :disable=\"!maximizedToggle\"\n          >\n            <q-tooltip\n              v-if=\"maximizedToggle\"\n              content-class=\"bg-white text-primary\"\n              >Minimize</q-tooltip\n            >\n          </q-btn>\n          <q-btn\n            dense\n            flat\n            icon=\"crop_square\"\n            @click=\"maximizedToggle = true\"\n            :disable=\"maximizedToggle\"\n          >\n            <q-tooltip\n              v-if=\"!maximizedToggle\"\n              content-class=\"bg-white text-primary\"\n              >Maximize</q-tooltip\n            >\n          </q-btn>\n          <q-btn dense flat icon=\"close\" v-close-popup>\n            <q-tooltip content-class=\"bg-white text-primary\">Close</q-tooltip>\n          </q-btn>\n        </q-bar>\n\n        <q-card-section>\n          <iframe\n            :src=\"code\"\n            height=\"900px\"\n            width=\"700px\"\n            title=\"Iframe Example\"\n          ></iframe>\n        </q-card-section>\n      </q-card>\n    </q-dialog>\n  </div>\n</template>\n\n<script>\nconst axios = require(\"axios\");\nconst token = localStorage.getItem(\"user-token\");\nconst instance = axios.create({\n  baseURL: \"http://localhost:8000/api/\",\n  headers: {\n    Authorization: \"Bearer \" + token,\n  },\n});\nconst defaultItem = {\n  sender: \"\",\n  branch: \"\",\n  status: \"\",\n  asof: \"\",\n  created: \"\",\n};\n\nconst InventoryColumns = [\n  {\n    name: \"sender\",\n    align: \"left\",\n    label: \"Sender\",\n    field: \"sender\",\n    sortable: true,\n  },\n  {\n    name: \"branch\",\n    align: \"left\",\n    label: \"Branch\",\n    field: \"branch\",\n    sortable: true,\n  },\n  {\n    name: \"status\",\n    align: \"left\",\n    label: \"Status\",\n    field: \"stat\",\n    sortable: true,\n  },\n  {\n    name: \"created\",\n    align: \"left\",\n    label: \"Date Created\",\n    field: \"created_at\",\n    sortable: true,\n  },\n  {\n    name: \"asof\",\n    align: \"left\",\n    label: \"As_Of\",\n    field: \"asof\",\n    sortable: true,\n  },\n  {\n    name: \"action\",\n    align: \"right\",\n    label: \"Action\",\n    field: \"action\",\n  },\n];\nconst InventorycData = [];\n\nexport default {\n  data() {\n    return {\n      dataurl: \"\",\n      dialog: false,\n      maximizedToggle: true,\n      inFs: false,\n      noti: () => {},\n      show_dialog: false,\n      editedIndex: -1,\n      editedItem: defaultItem,\n      filter: \"\",\n      mode: \"list\",\n      code: null,\n      InventoryColumns: InventoryColumns,\n      InventorycData: InventorycData,\n      pagination: {\n        page: 1,\n      },\n      page: 1,\n      totalRecord: 0,\n      pageCount: 1,\n    };\n  },\n  methods: {\n    render() {\n      instance.get(\"/inventory/index\").then((res) => {\n        this.InventorycData = res.data;\n       \n        res.data.forEach((element,index) => {\n            let isnull = \"Complete\";\n           element.invty_list.forEach((res)=>{\n             console.log(res.me);\n              if(!res.phy){\n                isnull = \"Incomplete\";\n              }\n           })\n           this.InventorycData[index].stat = isnull;\n        });\n       \n      });\n    },\n  },\n\n  mounted() {\n    this.render();\n  },\n};\n</script>"]}]}