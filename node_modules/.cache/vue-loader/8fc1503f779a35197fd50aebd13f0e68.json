{"remainingRequest":"/var/www/html/new-project-portal/vue-main-front/node_modules/vue-loader/lib/index.js??vue-loader-options!/var/www/html/new-project-portal/vue-main-front/src/components/inventory/settings.vue?vue&type=script&lang=js&","dependencies":[{"path":"/var/www/html/new-project-portal/vue-main-front/src/components/inventory/settings.vue","mtime":1623919785872},{"path":"/var/www/html/new-project-portal/vue-main-front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/var/www/html/new-project-portal/vue-main-front/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/var/www/html/new-project-portal/vue-main-front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/var/www/html/new-project-portal/vue-main-front/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["settings.vue"],"names":[],"mappingsifile":"settings.vue","sourceRoot":"src/components/inventory","sourcesContent":[" \n<template>\n\n  <div class=\"q-pa-md\">\n    <q-card>\n      <q-tabs\n        v-model=\"tab\"\n        dense\n        class=\"text-grey\"\n        active-color=\"primary\"\n        indicator-color=\"primary\"\n        align=\"justify\"\n      >\n        <q-tab name=\"users\" icon=\"fas fa-user-plus\" label=\"Users\" v-if=\"hasPermission('Create User')\" />\n        <q-tab\n          name=\"authorization\"\n          icon=\"fas fa-user-cog\"\n          label=\"Authorization\"\n          v-if=\"hasPermission('Authorization Access')\"\n        />\n        <q-tab name=\"branches\" icon=\"fas fa-code-branch\" label=\"Branches\" v-if=\"hasPermission('Create Branch')\"/>\n      </q-tabs>\n      <q-separator />\n      <q-tab-panels v-model=\"tab\" animated >\n        <q-tab-panel name=\"authorization\" class=\"q-pa-none\">\n          <q-splitter v-model=\"splitterModel\" style=\"height: 500px\">\n            <template v-slot:before>\n              <q-tabs v-model=\"innerTab\" vertical class=\"text-teal\">\n                <q-tab\n                  name=\"innerRoles\"\n                  icon=\"fas fa-clipboard-check\"\n                  label=\"Roles\"\n                />\n                <q-tab\n                  name=\"innerPermissions\"\n                  icon=\"fas fa-lock\"\n                  label=\"Permissions\"\n                />\n              </q-tabs>\n            </template>\n\n            <template v-slot:after>\n              <q-tab-panels\n                v-model=\"innerTab\"\n                animated\n                transition-prev=\"slide-down\"\n                transition-next=\"slide-up\"\n              >\n                <q-tab-panel name=\"innerRoles\">\n                  <div style=\"margin-bottom: 10px\">\n                    <!-- CREATE BUTTON ROLE-->\n                    <q-btn\n                      color=\"teal\"\n                      style=\"margin-right: 5px\"\n                      dense\n                      icon=\"far fa-plus-square\"\n                      @click=\"\n                        (RoleCreateDialog = true),\n                        (SelectPermissions = []),\n                        (RoleCreateModel = [])\n                      \"\n                    ></q-btn>\n                    <!-- END CREATE BUTTON ROLE-->\n                    <!-- DELETE BUTTON ROLE-->\n                    <q-btn\n                      color=\"teal\"\n                      v-if=\"selectedRole != ''\"\n                      @click=\"RoleDelete()\"\n                      dense\n                      icon=\"fas fa-trash-alt\"\n                    ></q-btn>\n                    <!-- END DELETE BUTTON ROLE-->\n                  </div>\n                  <!---------------------------------------  ROLES TABLE -------------------------------------------------->\n\n                  <!------------------------------------------------------------------------------------------------------->\n                  <q-table\n                    dense\n                    :filter=\"filterRoles\"\n                    title=\"Roles\"\n                    :data=\"dataRoles\"\n                    :columns=\"columnsRoles\"\n                    row-key=\"name\"\n                    :selected-rows-label=\"RoleMultipleSelect\"\n                    selection=\"multiple\"\n                    :selected.sync=\"selectedRole\"\n                  >\n                    <template v-slot:top-right>\n                      <q-input\n                        borderless\n                        dense\n                        debounce=\"300\"\n                        v-model=\"filterRoles\"\n                        placeholder=\"Search\"\n                      >\n                        <template v-slot:append>\n                          <q-icon name=\"search\" />\n                        </template>\n                      </q-input>\n                    </template>\n                    <template #body-cell-permissions=\"props\">\n                      <q-td :props=\"props\">\n                        <div v-if=\"props.row.permissions != ''\">\n                          <q-chip\n                            color=\"teal\"\n                            @click=\"\n                              morePermission({\n                                data: props.row.permissions,\n                                role: props.row.name,\n                              })\n                            \"\n                            clickable\n                          >\n                            {{ props.row.permissions[0][\"name\"] }}</q-chip\n                          >\n                          <label clickable>\n                            {{ \"+\" + props.row.permissions.length + \" others\" }}\n                          </label>\n                        </div>\n                      </q-td>\n                    </template>\n                    <template #body-cell-actions=\"props\">\n                      <q-td :props=\"props\">\n                        <q-icon\n                          clickable\n                          name=\"fas fa-edit\"\n                          color=\"teal\"\n                          dense\n                          @click=\"\n                            RoleEdit({\n                              id: props.row.id,\n                              data: props.row.permissions,\n                              role: props.row.name,\n                            })\n                          \"\n                        />\n                      </q-td>\n                    </template>\n                  </q-table>\n\n                  <!--PERMISSION DIALOG ROLES-->\n                  <q-dialog\n                    v-model=\"PermissionListDialog\"\n                    persistent\n                    transition-show=\"scale\"\n                    transition-hide=\"scale\"\n                    ><q-card class=\"bg-teal text-white\" style=\"width: 300px\">\n                      <q-bar>{{ PermissionsList.role }}</q-bar>\n                      <q-card-section class=\"bg-white\">\n                        <div v-for=\"names in PermissionsList.data\">\n                          <q-chip color=\"teal\" dense>{{ names.name }}</q-chip>\n                        </div>\n                      </q-card-section>\n                      <q-card-actions align=\"right\" class=\"bg-white text-teal\">\n                        <q-btn\n                          flat\n                          icon=\"fas fa-times\"\n                          label=\"close\"\n                          v-close-popup\n                          @click=\"PermissionsList = []\"\n                        />\n                      </q-card-actions>\n                    </q-card>\n                  </q-dialog>\n                  <!--END PERMISSION DIALOG ROLES-->\n                  <!--------------------------------------- END ROLES TABLE -------------------------------------------------->\n\n                  <!---------------------------------------------------------------------------------------------------------->\n                </q-tab-panel>\n                <q-tab-panel name=\"innerPermissions\">\n                  <div style=\"margin-bottom: 10px\">\n                    <!--CREATE BUTTON PERMISSION-->\n                    <q-btn\n                      color=\"teal\"\n                      style=\"margin-right: 5px\"\n                      dense\n                      icon=\"far fa-plus-square\"\n                      @click=\"permissionCreateDialog = true\"\n                    ></q-btn>\n                    <!-- END CREATE BUTTON PERMISSION-->\n                    <!--DELETE BUTTON PERMISSION-->\n                    <q-btn\n                      color=\"teal\"\n                      v-if=\"selectedPermission != ''\"\n                      dense\n                      icon=\"fas fa-trash-alt\"\n                      @click=\"permissionTrash\"\n                    ></q-btn>\n                    <!--END DELETE BUTTON PERMISSION-->\n                  </div>\n                  <!---------------------------------------  PERMISSIONS TABLE -------------------------------------------------->\n\n                  <!------------------------------------------------------------------------------------------------------------->\n                  <q-table\n                    dense\n                    :filter=\"filterPermissions\"\n                    title=\"Permissions\"\n                    :data=\"dataPermissions\"\n                    :columns=\"columnsPermissions\"\n                    row-key=\"name\"\n                    :selected-rows-label=\"MultipleSelect\"\n                    selection=\"multiple\"\n                    :selected.sync=\"selectedPermission\"\n                  >\n                    <template v-slot:top-right>\n                      <q-input\n                        borderless\n                        dense\n                        debounce=\"300\"\n                        v-model=\"filterPermissions\"\n                        placeholder=\"Search\"\n                      >\n                        <template v-slot:append>\n                          <q-icon name=\"search\" />\n                        </template>\n                      </q-input>\n                    </template>\n                    <template #body-cell-actions=\"props\">\n                      <q-td :props=\"props\">\n                        <q-icon\n                          name=\"fas fa-edit\"\n                          color=\"teal\"\n                          dense\n                          @click=\"Permissionedit(props.row.id)\"\n                        />\n                      </q-td>\n                    </template>\n                  </q-table>\n\n                  <!-------------------------------------- PERMISSIONS DIALOG -------------------------------------------------->\n                  <!------------------------------------------------------------------------------------------------------------>\n\n                  <!-------------------------------------- END PERMISSION DIALOG -------------------------------------------------->\n                </q-tab-panel>\n              </q-tab-panels>\n            </template>\n            <!--EDIT DIALOG ROLES-->\n            <q-dialog\n              v-model=\"RoleEditDialog\"\n              persistent\n              transition-show=\"scale\"\n              transition-hide=\"scale\"\n              ><q-card class=\"bg-teal text-white\" style=\"width: 300px\">\n                <q-bar> {{ PermissionsList.role }} </q-bar>\n                <q-card-section class=\"bg-white\">\n                  <q-input\n                    ref=\"RequiredRole\"\n                    :rules=\"[this.RequiredRole]\"\n                    square\n                    outlined\n                    v-model=\"RoleUpdateModel\"\n                    dense\n                    label=\"Role Create\"\n                  />\n                </q-card-section>\n                <q-card-section class=\"bg-white\">\n                  <q-select\n                    ref=\"RequiredPermission\"\n                    :rules=\"[this.RequiredPermission]\"\n                    filled\n                    v-model=\"SelectPermissions\"\n                    use-input\n                    use-chips\n                    multiple\n                    emit-value\n                    map-options\n                    input-debounce=\"0\"\n                    :options=\"filterOptions\"\n                  />\n                </q-card-section>\n                <q-card-actions align=\"right\" class=\"bg-white text-teal\">\n                  <q-btn\n                    flat\n                    icon=\"fas fa-save\"\n                    label=\"Update\"\n                    @click=\"RoleUpdate()\"\n                    v-close-popup\n                  />\n                  <q-btn flat icon=\"fas fa-times\" label=\"close\" v-close-popup />\n                </q-card-actions>\n              </q-card>\n            </q-dialog>\n            <!--END EDIT DIALOG ROLES-->\n            <!--CREATE DIALOG ROLES-->\n            <q-dialog\n              v-model=\"RoleCreateDialog\"\n              persistent\n              transition-show=\"scale\"\n              transition-hide=\"scale\"\n              ><q-card class=\"bg-teal text-white\" style=\"width: 300px\">\n                <q-bar> Create Role</q-bar>\n                <q-card-section class=\"bg-white\">\n                  <q-input\n                    ref=\"RequiredRole\"\n                    :rules=\"[this.RequiredRole]\"\n                    lazy-rules\n                    square\n                    outlined\n                    v-model=\"RoleCreateModel\"\n                    dense\n                    label=\"Role Create\"\n                  />\n                </q-card-section>\n                <q-card-section class=\"bg-white\">\n                  <q-select\n                    ref=\"RequiredPermission\"\n                    :rules=\"[this.RequiredPermission]\"\n                    lazy-rules\n                    filled\n                    v-model=\"SelectPermissions\"\n                    use-input\n                    use-chips\n                    multiple\n                    emit-value\n                    map-options\n                    input-debounce=\"0\"\n                    :options=\"filterOptions\"\n                  />\n                </q-card-section>\n                <q-card-actions align=\"right\" class=\"bg-white text-teal\">\n                  <q-btn\n                    flat\n                    icon=\"fas fa-save\"\n                    label=\"save\"\n                    @click=\"RoleCreate()\"\n                  />\n                  <q-btn flat icon=\"fas fa-times\" label=\"close\" v-close-popup />\n                </q-card-actions>\n              </q-card>\n            </q-dialog>\n            <!--END CREATE DIALOG ROLES-->\n            <!--EDIT DIALOG PERMISSION-->\n            <q-dialog\n              v-model=\"permissionEditDialog\"\n              persistent\n              transition-show=\"scale\"\n              transition-hide=\"scale\"\n            >\n              <q-card class=\"bg-teal text-white\" style=\"width: 300px\">\n                <q-bar>Edit Permission</q-bar>\n                <q-card-section class=\"bg-white\">\n                  <q-input\n                    ref=\"RequiredPermission\"\n                    :rules=\"[this.RequiredPermission]\"\n                    lazy-rules\n                    square\n                    outlined\n                    v-model=\"PermissionName\"\n                    dense\n                    label=\"Permission\"\n                  />\n                </q-card-section>\n                <q-card-actions align=\"right\" class=\"bg-white text-teal\">\n                  <q-btn\n                    flat\n                    icon=\"fas fa-save\"\n                    label=\"save\"\n                    @click=\"PermissionUpdate()\"\n                  />\n                  <q-btn\n                    flat\n                    icon=\"fas fa-times\"\n                    label=\"close\"\n                    @click=\"EditedPermission = []\"\n                    v-close-popup\n                  />\n                </q-card-actions>\n              </q-card>\n            </q-dialog>\n            <!--END EDIT DIALOG PERMISSION-->\n            <!--CREATE DIALOG PERMISSION-->\n            <q-dialog\n              v-model=\"permissionCreateDialog\"\n              persistent\n              transition-show=\"scale\"\n              transition-hide=\"scale\"\n            >\n              <q-card class=\"bg-teal text-white\" style=\"width: 300px\">\n                <q-bar> Create Permission </q-bar>\n                <q-card-section class=\"bg-white\">\n                  <q-input\n                    ref=\"RequiredPermission\"\n                    lazy-rules\n                    square\n                    outlined\n                    v-model=\"PermissionCreateModel\"\n                    dense\n                    :rules=\"[this.RequiredPermission]\"\n                    label=\"Permission Create\"\n                  >\n                  </q-input>\n                </q-card-section>\n                <q-card-actions align=\"right\" class=\"bg-white text-teal\">\n                  <q-btn\n                    flat\n                    icon=\"fas fa-save\"\n                    label=\"save\"\n                    @click=\"PermissionCreate()\"\n                  />\n                  <q-btn flat icon=\"fas fa-times\" label=\"close\" v-close-popup />\n                </q-card-actions>\n              </q-card>\n            </q-dialog>\n            <!--END CREATE DIALOG PERMISSION-->\n            <!---------------------------------------END PERMISSIONS TABLE -------------------------------------------------->\n\n            <!--------------------------------------------------------------------------------------------------------------->\n          </q-splitter>\n        </q-tab-panel>\n        <q-tab-panel name=\"users\">\n          <div class=\"q-pa-md\">\n            <div style=\"margin-bottom: 10px\">\n              <q-btn\n                color=\"teal\"\n                style=\"margin-right: 5px\"\n                dense\n                icon=\"far fa-plus-square\"\n                @click=\"UsersCreateDialog = true ,email = '',password = '',password_confirmation = '',SeleRoles = '',branch=[],name=''\"\n              ></q-btn>\n              <q-btn\n                color=\"teal\"\n                v-if=\"selectedUsers != ''\"\n                dense\n                icon=\"fas fa-trash-alt\"\n                @click=\"userDelete\"\n              ></q-btn>\n            </div>\n            <q-table\n              dense\n              :filter=\"filterUsers\"\n              title=\"Users\"\n              :data=\"dataUsers\"\n              :columns=\"columnsUsers\"\n              row-key=\"id\"\n              :selected-rows-label=\"UsersMultipleSelect\"\n              selection=\"multiple\"\n              :selected.sync=\"selectedUsers\"\n            >\n              <template v-slot:top-right>\n                <q-input\n                  borderless\n                  dense\n                  debounce=\"300\"\n                  v-model=\"filterUsers\"\n                  placeholder=\"Search\"\n                >\n                  <template v-slot:append>\n                    <q-icon name=\"search\" />\n                  </template>\n                </q-input>\n              </template>\n              <template #body-cell-actions=\"props\">\n                <q-td :props=\"props\">\n                  <q-icon\n                    name=\"fas fa-edit\"\n                    color=\"teal\"\n                    dense\n                    @click=\"UsersEdit({ data: props.row })\"\n                  />\n                </q-td>\n              </template>\n              <template #body-cell-branches=\"props\">\n                <q-td :props=\"props\">\n                  <div v-if=\"props.row.branches\">\n                    {{ props.row.branches.branch }}\n                  </div>\n                   \n                  <!-- <q-icon\n                      name=\"fas fa-edit\"\n                      color=\"teal\"\n                      dense\n                      @click=\"UsersEdit({data: props.row})\"\n                    /> -->\n                </q-td>\n              </template>\n              <template #body-cell-roles=\"props\">\n                <q-td :props=\"props\">\n                  <!-- <q-icon\n                      name=\"fas fa-edit\"\n                      color=\"teal\"\n                      dense\n                      @click=\"UsersEdit({data: props.row})\"\n                    />\n                     -->\n                  <div v-if=\"props.row.roles != ''\">\n                    <q-chip\n                      color=\"teal\"\n                      @click=\"\n                        moreRoles({\n                          data: props.row.roles,\n                          role: props.row.roles[0].name,\n                        })\n                      \"\n                      clickable\n                    >\n                      {{ props.row.roles[0].name }}</q-chip\n                    >\n                    <label clickable>\n                      {{ \"+\" + props.row.roles.length + \" others\" }}\n                    </label>\n                  </div>\n                </q-td>\n              </template>\n            </q-table>\n            <!--CREATE DIALOG USER -->\n            <q-dialog\n              v-model=\"UsersCreateDialog\"\n              persistent\n              transition-show=\"scale\"\n              transition-hide=\"scale\"\n            >\n              <q-card class=\"bg-teal text-white\" style=\"width: 300px\">\n                <q-bar> Create User </q-bar>\n                <q-card-section class=\"bg-white\">\n                  <q-input\n                    ref=\"email\"\n                    square\n                    clearable\n                    v-model=\"email\"\n                    type=\"email\"\n                    lazy-rules\n                    dense\n                    :rules=\"[this.required, this.isEmail, this.short]\"\n                    label=\"Email\"\n                  >\n                    <template v-slot:prepend>\n                      <q-icon name=\"email\" />\n                    </template>\n                  </q-input>\n                  <q-input\n                    ref=\"username\"\n                    square\n                    clearable\n                    v-model=\"name\"\n                    lazy-rules\n                    dense\n                    :rules=\"[this.required, this.short]\"\n                    type=\"username\"\n                    label=\"Username\"\n                  >\n                    <template v-slot:prepend>\n                      <q-icon name=\"person\" />\n                    </template>\n                  </q-input>\n                  <q-input\n                    ref=\"password\"\n                    square\n                    clearable\n                    v-model=\"password\"\n                    :type=\"passwordFieldType\"\n                    lazy-rules\n                    dense\n                    :rules=\"[this.required, this.short]\"\n                    label=\"Password\"\n                  >\n                    <template v-slot:prepend>\n                      <q-icon name=\"lock\" />\n                    </template>\n                  </q-input>\n                  <q-input\n                    ref=\"password_confirmation\"\n                    square\n                    clearable\n                    v-model=\"password_confirmation\"\n                    :type=\"passwordFieldType\"\n                    lazy-rules\n                    dense\n                    :rules=\"[this.required, this.short, this.diffPassword]\"\n                    label=\"Confirmation\"\n                    ><template v-slot:prepend>\n                      <q-icon name=\"lock\" />\n                    </template>\n                  </q-input>\n                  <q-select\n                    ref=\"RolesVal\"\n                    filled\n                    v-model=\"SelectRoles\"\n                    :options=\"RolesData\"\n                    label=\"Select Role\"\n                    multiple\n                    emit-value\n                    map-options\n                    :rules=\"[this.requiredRole]\"\n                  >\n                    <template\n                      v-slot:option=\"{\n                        itemProps,\n                        itemEvents,\n                        opt,\n                        selected,\n                        toggleOption,\n                      }\"\n                    >\n                      <q-item v-bind=\"itemProps\" v-on=\"itemEvents\">\n                        <q-item-section>\n                          <q-item-label v-html=\"opt.label\"></q-item-label>\n                        </q-item-section>\n                        <q-item-section side>\n                          <q-toggle\n                            :value=\"selected\"\n                            @input=\"toggleOption(opt)\"\n                          />\n                        </q-item-section>\n                      </q-item>\n                    </template>\n                  </q-select>\n                  <q-select\n                    ref=\"BranchesVal\"\n                    filled\n                    v-model=\"branch\"\n                    :options=\"BranchesList\"\n                    stack-label\n                    emit-value\n                    map-options\n                    label=\"Appletronics Warehouse\"\n                    color=\"secondary\"\n                    :rules=\"[this.requiredBranch]\"\n                  >\n                    <template v-slot:selected-item=\"scope\">\n                      <q-chip\n                        removable\n                        dense\n                        @remove=\"scope.removeAtIndex(scope.index)\"\n                        :tabindex=\"scope.tabindex\"\n                        color=\"teal\"\n                        text-color=\"white\"\n                        class=\"q-ma-none\"\n                      >\n                        <q-avatar\n                          color=\"teal\"\n                          text-color=\"white\"\n                          :icon=\"scope.opt.icon\"\n                        />\n                        {{ scope.opt.label }}\n                      </q-chip>\n                    </template>\n                  </q-select>\n                </q-card-section>\n                <q-card-actions align=\"right\" class=\"bg-white text-teal\">\n                  <q-btn\n                    flat\n                    icon=\"fas fa-save\"\n                    label=\"save\"\n                    @click=\"UsersCreate()\"\n                  />\n                  <q-btn flat icon=\"fas fa-times\" label=\"close\" v-close-popup />\n                </q-card-actions>\n              </q-card>\n            </q-dialog>\n            <!--END CREATE DIALOG USER-->\n\n            <!--CREATE DIALOG USER -->\n            <q-dialog\n              v-model=\"UsersUpdateDialog\"\n              persistent\n              transition-show=\"scale\"\n              transition-hide=\"scale\"\n            >\n              <q-card class=\"bg-teal text-white\" style=\"width: 300px\">\n                <q-bar> Edit User </q-bar>\n                <q-card-section class=\"bg-white\">\n                  <q-input\n                    ref=\"email\"\n                    square\n                    clearable\n                    v-model=\"email\"\n                    type=\"email\"\n                    lazy-rules\n                    dense\n                    :rules=\"[this.required, this.isEmail, this.short]\"\n                    label=\"Email\"\n                  >\n                    <template v-slot:prepend>\n                      <q-icon name=\"email\" />\n                    </template>\n                  </q-input>\n                  <q-input\n                    ref=\"username\"\n                    square\n                    clearable\n                    v-model=\"name\"\n                    lazy-rules\n                    dense\n                    :rules=\"[this.required, this.short]\"\n                    type=\"username\"\n                    label=\"Username\"\n                  >\n                    <template v-slot:prepend>\n                      <q-icon name=\"person\" />\n                    </template>\n                  </q-input>\n                  <q-input\n                    ref=\"password\"\n                    square\n                    clearable\n                    v-model=\"password\"\n                    :type=\"passwordFieldType\"\n                    lazy-rules\n                    dense\n                    :rules=\"[this.required, this.short]\"\n                    label=\"Password\"\n                  >\n                    <template v-slot:prepend>\n                      <q-icon name=\"lock\" />\n                    </template>\n                  </q-input>\n                  <q-input\n                    ref=\"password_confirmation\"\n                    square\n                    clearable\n                    v-model=\"password_confirmation\"\n                    :type=\"passwordFieldType\"\n                    lazy-rules\n                    dense\n                    :rules=\"[this.required, this.short, this.diffPassword]\"\n                    label=\"Confirmation\"\n                  >\n                    <template v-slot:prepend>\n                      <q-icon name=\"lock\" />\n                    </template>\n                  </q-input>\n                  <q-select\n                    ref=\"RolesVal\"\n                    filled\n                    v-model=\"SelectRoles\"\n                    :options=\"RolesData\"\n                    label=\"Select Role\"\n                    multiple\n                    emit-value\n                    map-options\n                    :rules=\"[this.requiredRole]\"\n                  >\n                    <template\n                      v-slot:option=\"{\n                        itemProps,\n                        itemEvents,\n                        opt,\n                        selected,\n                        toggleOption,\n                      }\"\n                    >\n                      <q-item v-bind=\"itemProps\" v-on=\"itemEvents\">\n                        <q-item-section>\n                          <q-item-label v-html=\"opt.label\"></q-item-label>\n                        </q-item-section>\n                        <q-item-section side>\n                          <q-toggle\n                            :value=\"selected\"\n                            @input=\"toggleOption(opt)\"\n                          />\n                        </q-item-section>\n                      </q-item>\n                    </template>\n                  </q-select>\n                  <q-select\n                    ref=\"BranchesVal\"\n                    filled\n                    v-model=\"branch\"\n                    :options=\"BranchesList\"\n                    stack-label\n                    emit-value\n                    map-options\n                    label=\"Appletronics Warehouse\"\n                    color=\"secondary\"\n                    :rules=\"[this.requiredBranch]\"\n                  >\n                    <template v-slot:selected-item=\"scope\">\n                      <q-chip\n                        removable\n                        dense\n                        @remove=\"scope.removeAtIndex(scope.index)\"\n                        :tabindex=\"scope.tabindex\"\n                        color=\"teal\"\n                        text-color=\"white\"\n                        class=\"q-ma-none\"\n                      >\n                        <q-avatar\n                          color=\"teal\"\n                          text-color=\"white\"\n                          :icon=\"scope.opt.icon\"\n                        />\n                        {{ scope.opt.label }}\n                      </q-chip>\n                    </template>\n                  </q-select>\n                </q-card-section>\n                <q-card-actions align=\"right\" class=\"bg-white text-teal\">\n                  <q-btn\n                    flat\n                    icon=\"fas fa-save\"\n                    label=\"Update\"\n                    @click=\"UsersUpdate()\"\n                  />\n                  <q-btn flat icon=\"fas fa-times\" label=\"close\" v-close-popup />\n                </q-card-actions>\n              </q-card>\n            </q-dialog>\n            <!--END CREATE DIALOG USER-->\n            <!--PERMISSION DIALOG ROLES-->\n            <q-dialog\n              v-model=\"RolesListDialog\"\n              persistent\n              transition-show=\"scale\"\n              transition-hide=\"scale\"\n              ><q-card class=\"bg-teal text-white\" style=\"width: 300px\">\n                <q-bar>Roles</q-bar>\n                <q-card-section class=\"bg-white\">\n                  <div v-for=\"names in RolesList.data\">\n                    <q-chip color=\"teal\" dense>{{ names.name }}</q-chip>\n                  </div>\n                </q-card-section>\n                <q-card-actions align=\"right\" class=\"bg-white text-teal\">\n                  <q-btn\n                    flat\n                    icon=\"fas fa-times\"\n                    label=\"close\"\n                    v-close-popup\n                    @click=\"RolesList = []\"\n                  />\n                </q-card-actions>\n              </q-card>\n            </q-dialog>\n            <!--END PERMISSION DIALOG ROLES-->\n          </div>\n        </q-tab-panel>\n        <q-tab-panel name=\"branches\">\n          <div style=\"margin-bottom: 10px\">\n            <q-btn\n              color=\"teal\"\n              style=\"margin-right: 5px\"\n              dense\n              icon=\"far fa-plus-square\"\n              @click=\"CreateBranchDialog = true\"\n            ></q-btn>\n            <q-btn\n              color=\"teal\"\n              v-if=\"selectedBranches != ''\"\n              dense\n              icon=\"fas fa-trash-alt\"\n              @click=\"deleteBranch()\"\n            ></q-btn>\n          </div>\n          <q-table\n            dense\n            :filter=\"filterBranches\"\n            title=\"Branches/WHS\"\n            :data=\"dataBranches\"\n            :columns=\"columnsBranches\"\n            row-key=\"branch\"\n            :selected-rows-label=\"BranchesMultipleSelect\"\n            selection=\"multiple\"\n            :selected.sync=\"selectedBranches\"\n          >\n            <template v-slot:top-right>\n              <q-input\n                borderless\n                dense\n                debounce=\"300\"\n                v-model=\"filterBranches\"\n                placeholder=\"Search\"\n              >\n                <template v-slot:append>\n                  <q-icon name=\"search\" />\n                </template>\n              </q-input>\n            </template>\n            <template #body-cell-actions=\"props\">\n              <q-td :props=\"props\">\n                <q-icon\n                  name=\"fas fa-edit\"\n                  color=\"teal\"\n                  dense\n                  @click=\"BranchesEdit({data: props.row})\"\n                />\n              </q-td>\n            </template>\n          </q-table>\n        </q-tab-panel>\n      </q-tab-panels>\n          <!--CREATE BRANCH DIALOG-->\n                <q-dialog\n                  v-model=\"CreateBranchDialog\"\n                  persistent\n                  transition-show=\"scale\"\n                  transition-hide=\"scale\"\n                  ><q-card class=\"bg-teal text-white\" style=\"width: 300px\">\n                    <q-bar>Create Branch</q-bar>\n                    <q-card-section class=\"bg-white\">\n                      <q-input \n                      ref=\"requiredBranch\"\n                      v-model=\"branchField\"\n                      dense\n                      lazy-rules\n                      clearable\n                      label=\"Branch\"\n                      :rules=\"[this.requiredBranch]\"\n                      />\n                      <q-input \n                      ref=\"requiredWarehouse\"\n                      v-model=\"warehouseField\"\n                      lazy-rules\n                      dense\n                      clearable\n                      label=\"Warehouse\"\n                      :rules=\"[this.requiredWarehouse]\"\n                      />\n                    </q-card-section>\n                    <q-card-actions align=\"right\" class=\"bg-white text-teal\">\n                     <q-btn\n                        flat\n                        icon=\"fas fa-save\"\n                        label=\"save\"\n                        @click=\"CreateBranch()\"\n                      />\n                      <q-btn\n                        flat\n                        icon=\"fas fa-times\"\n                        label=\"close\"\n                        v-close-popup\n                        @click=\"branchField = ''\"\n                      />\n                    </q-card-actions>\n                  </q-card>\n                </q-dialog>\n          <!--END CREATE BRANCH DIALOG-->\n          <!--EDIT BRANCH DIALOG-->\n                <q-dialog\n                  v-model=\"EditBranchDialog\"\n                  persistent\n                  transition-show=\"scale\"\n                  transition-hide=\"scale\"\n                  ><q-card class=\"bg-teal text-white\" style=\"width: 300px\">\n                    <q-bar>Edit Branch</q-bar>\n                    <q-card-section class=\"bg-white\">\n                      <q-input \n                      ref=\"requiredBranch\"\n                      v-model=\"branchField\"\n                      dense\n                      lazy-rules\n                      clearable\n                      label=\"Branch\"\n                      :rules=\"[this.requiredBranch]\"\n                      />\n                      <q-input \n                      ref=\"requiredWarehouse\"\n                      v-model=\"warehouseField\"\n                      lazy-rules\n                      dense\n                      clearable\n                      label=\"Warehouse\"\n                      :rules=\"[this.requiredWarehouse]\"\n                      />\n                    </q-card-section>\n                    <q-card-actions align=\"right\" class=\"bg-white text-teal\">\n                     <q-btn\n                        flat\n                        icon=\"fas fa-save\"\n                        label=\"save\"\n                        @click=\"UpdateBranch()\"\n                      />\n                      <q-btn\n                        flat\n                        icon=\"fas fa-times\"\n                        label=\"close\"\n                        v-close-popup\n                        @click=\"branchField = ''\"\n                      />\n                    </q-card-actions>\n                  </q-card>\n                </q-dialog>\n          <!--END EDIT BRANCH DIALOG-->\n    </q-card>\n \n  </div>\n  \n</template>\n<script>\nconst axios = require(\"axios\");\nconst token = localStorage.getItem(\"user-token\");\n \nconst instance = axios.create({\n  baseURL: \"https://appletronics-api.webportal.ac/api/\",\n  headers: {\n    Authorization: \"Bearer \" + token,\n  },\n});\n \nexport default {\n  data() {\n    return {\n      permissions: [],\n      Authorization: false,\n      email: \"\",\n      name: \"\",\n      password: \"\",\n      password_confirmation: \"\",\n      passwordFieldType: \"password\",\n      UsersUpdateDialog: false,\n      RolesData: [],\n      RolesList: [],\n      RolesListDialog: false,\n      SelectRoles: [],\n      branch: null,\n      BranchesList: [],\n      branchField: null,\n      EditBranchDialog: false,\n      EditBranchID: null,\n      warehouseField: null,\n      UsersUpdateModel: null,\n      UsersCreateDialog: false,\n      UserUpdateID: null,\n      EditedPermission: null,\n      PermissionsList: [],\n      PermissionListDialog: false,\n      RoleCreateModel: null,\n      RoleIdUpdateModel: null,\n      RoleUpdateModel: null,\n      RoleCreateDialog: false,\n      RoleEditDialog: false,\n      CreateBranchDialog: false,\n      SelectPermissions: [],\n      filterOptions: [],\n      RoleData: [],\n      RoleName: null,\n      RoleEditDialog: false,\n      selectedRole: [],\n      selectedBranches: [],\n      selectedUsers: [],\n      PermissionCreateModel: null,\n      permissionCreateDialog: false,\n      PermissionName: null,\n      permissionEditDialog: false,\n      selectedPermission: [],\n      tab: \"users\",\n      innerTab: \"innerMails\",\n      splitterModel: 20,\n      filterPermissions: \"\",\n      filterRoles: \"\",\n      filterBranches: \"\",\n      filterUsers: \"\",\n      columnsPermissions: [\n        {\n          name: \"name\",\n          required: true,\n          field: \"name\",\n          label: \"Name\",\n          align: \"left\",\n          sortable: true,\n        },\n        { name: \"actions\", label: \"Actions\", field: \"actions\", sortable: true },\n      ],\n      columnsBranches: [\n        {\n          name: \"name\",\n          required: true,\n          field: \"branch\",\n          label: \"Name\",\n          align: \"left\",\n          sortable: true,\n        },\n         {\n          name: \"WareHouse\",\n          required: true,\n          field: \"whscode\",\n          label: \"WareHouse\",\n          align: \"left\",\n          sortable: true,\n        },\n        { name: \"actions\", label: \"Actions\", field: \"actions\", sortable: true },\n      ],\n      columnsUsers: [\n        {\n          name: \"name\",\n          required: true,\n          field: \"name\",\n          label: \"Name\",\n          align: \"left\",\n          sortable: true,\n        },\n        {\n          name: \"email\",\n          required: true,\n          field: \"email\",\n          label: \"Email\",\n          align: \"left\",\n          sortable: true,\n        },\n        {\n          name: \"branches\",\n          required: true,\n          label: \"Branch/Whs\",\n          align: \"left\",\n          sortable: true,\n        },\n        {\n          name: \"roles\",\n          required: true,\n          label: \"Roles\",\n          align: \"left\",\n          sortable: true,\n        },\n        { name: \"actions\", label: \"Actions\", field: \"actions\", sortable: true },\n      ],\n      columnsRoles: [\n        {\n          name: \"name\",\n          field: \"name\",\n          required: true,\n          label: \"Name\",\n          align: \"left\",\n          sortable: true,\n        },\n        {\n          name: \"permissions\",\n          required: true,\n          label: \"Permissions\",\n          align: \"left\",\n          sortable: true,\n        },\n        { name: \"actions\", label: \"Actions\", field: \"actions\", sortable: true },\n      ],\n      dataPermissions: [],\n      dataRoles: [],\n      dataBranches: [],\n      dataUsers: [],\n    };\n  },\n  methods: {\n    requiredWarehouse(val){\n      return (val && val.length > 0) || \"Required Warehouse\";\n    },\n    requiredBranch(val){\n      return (val && val.length > 0) || \"Required Branch\";\n    },\n    RequiredRole(val) {\n      return (val && val.length > 0) || \"Required Role\";\n    },\n    RequiredPermission(val) {\n      return (val && val.length > 0) || \"Required Permissions\";\n    },\n    required(val) {\n      return (val && val.length > 0) || \"Please enter password\";\n    },\n    requiredRole(val) {\n      return (val && val.length > 0) || \"Please Select Roles\";\n    },\n    requiredBranch(val) {\n      if (!val) {\n        return \"Please Select Branch/Whs\";\n      }\n    },\n    diffPassword(val) {\n      const val2 = this.$refs.password.value;\n      return (val && val === val2) || \"Password does not match!\";\n    },\n    short(val) {\n      return (val && val.length > 3) || \"The Value is to short\";\n    },\n    isEmail(val) {\n      const emailPattern = /^(?=[a-zA-Z0-9@._%+-]{6,254}$)[a-zA-Z0-9._%+-]{1,64}@(?:[a-zA-Z0-9-]{1,63}\\.){1,8}[a-zA-Z]{2,63}$/;\n      return emailPattern.test(val) || \"Please enter a valid email\";\n    },\n    renderPermission() {\n      instance.post(\"/permission/index\").then((res) => {\n        this.dataPermissions = res.data;\n      });\n    },\n    Permissionedit(id) {\n      this.EditedPermission = id;\n      this.permissionEditDialog = true;\n      instance\n        .post(\"/permission/edit\", {\n          id,\n        })\n        .then(\n          (res) => {\n            this.PermissionName = res.data.name;\n \n          },\n          () => {\n            this.$q.notify({\n              type: \"warning\",\n              message: \"Something Wrong..!\",\n            });\n          }\n        );\n    },\n    PermissionUpdate() {\n      this.PermissionCreateModel = \"\";\n      this.$refs.RequiredPermission.validate();\n      if (!this.$refs.RequiredPermission.hasError) {\n        instance\n          .post(\"/permission/update\", {\n            name: this.PermissionName,\n            id: this.EditedPermission,\n          })\n          .then(\n            (res) => {\n              this.renderPermission();\n              this.EditedPermission = [];\n              this.$q.notify({\n                type: \"\" + res.data.color + \"\",\n                message: \"\" + res.data.msg + \"\",\n              });\n            },\n            () => {\n              this.$q.notify({\n                type: \"warning\",\n                message: \"Something Wrong..!\",\n              });\n            }\n          );\n      }\n    },\n    PermissionCreate() {\n      this.$refs.RequiredPermission.validate();\n      if (!this.$refs.RequiredPermission.hasError) {\n        instance\n          .post(\"/permission/create\", {\n            name: this.PermissionCreateModel,\n          })\n          .then(\n            (res) => {\n              this.renderPermission();\n              this.$q.notify({\n                type: \"\" + res.data.color + \"\",\n                message: \"\" + res.data.msg + \"\",\n              });\n            },\n            () => {\n              this.$q.notify({\n                type: \"warning\",\n                message: \"Something Wrong..!\",\n              });\n            }\n          );\n      }\n    },\n    permissionTrash() {\n      let trash = this.selectedPermission;\n      instance\n        .post(\"/permission/trash\", {\n          trash,\n        })\n        .then(\n          (res) => {\n            this.renderPermission();\n            this.$q.notify({\n              type: \"\" + res.data.color + \"\",\n              message: \"\" + res.data.msg + \"\",\n            });\n            this.selectedPermission = [];\n          },\n          () => {\n            this.$q.notify({\n              type: \"warning\",\n              message: \"Something Wrong..!\",\n            });\n          }\n        );\n    },\n    RoleCreate() {\n      this.$refs.RequiredRole.validate();\n      this.$refs.RequiredPermission.validate();\n      if (\n        !this.$refs.RequiredPermission.hasError &&\n        !this.$refs.RequiredRole.hasError\n      ) {\n        instance\n          .post(\"/role/create\", {\n            name: this.RoleCreateModel,\n            permissions: this.SelectPermissions,\n          })\n          .then(\n            (res) => {\n              this.renderRole();\n              this.$q.notify({\n                type: \"\" + res.data.color + \"\",\n                message: \"\" + res.data.msg + \"\",\n              });\n            },\n            () => {\n              this.$q.notify({\n                type: \"warning\",\n                message: \"Something Wrong..!\",\n              });\n            }\n          );\n      }\n    },\n    RoleEdit(data) {\n      this.RoleIdUpdateModel = data.id;\n      this.RoleUpdateModel = data.role;\n      this.PermissionsList = data;\n      this.RoleEditDialog = true;\n      let i = [];\n      data.data.forEach((res) => {\n        i.push(res.id);\n      });\n      this.SelectPermissions = i;\n    },\n    renderRole() {\n      instance.post(\"/role/index\").then(\n        (res) => {\n          this.dataRoles = res.data;\n          let role = [];\n          res.data.forEach((i) => {\n            role.push({ label: i.name, value: i.id });\n          });\n          this.RolesData = role;\n        },\n        () => {\n          this.$q.notify({\n            type: \"warning\",\n            message: \"Something Wrong..Please Refresh the page!\",\n          });\n        }\n      );\n    },\n    RoleUpdate() {\n      this.$refs.RequiredRole.validate();\n      this.$refs.RequiredPermission.validate();\n      if (\n        !this.$refs.RequiredPermission.hasError &&\n        !this.$refs.RequiredRole.hasError\n      ) {\n        instance\n          .post(\"/role/update\", {\n            id: this.RoleIdUpdateModel,\n            name: this.RoleUpdateModel,\n            permissions: this.SelectPermissions,\n          })\n          .then(\n            () => {\n              this.renderRole();\n              this.$q.notify({\n                type: \"\" + res.data.color + \"\",\n                message: \"\" + res.data.msg + \"\",\n              });\n            },\n            () => {\n              this.$q.notify({\n                type: \"warning\",\n                message: \"Something Wrong..!\",\n              });\n            }\n          );\n      }\n    },\n    CreateRole_btn() {\n      instance.post(\"/permission/index\").then(\n        (res) => {\n          res.data.forEach((element) => {\n            this.filterOptions.push({ label: element.name, value: element.id });\n          });\n        },\n        () => {\n          this.$q.notify({\n            type: \"warning\",\n            message: \"Something Wrong..!\",\n          });\n        }\n      );\n    },\n    RoleDelete() {\n      let trash = this.selectedRole;\n      instance\n        .post(\"/role/trash\", {\n          trash,\n        })\n        .then(\n          (res) => {\n            this.renderRole();\n            this.$q.notify({\n              type: \"\" + res.data.color + \"\",\n              message: \"\" + res.data.msg + \"\",\n            });\n            this.selectedRole = [];\n          },\n          () => {\n            this.$q.notify({\n              type: \"warning\",\n              message: \"Something Wrong..!\",\n            });\n          }\n        );\n    },\n    morePermission(data) {\n      this.PermissionsList = data;\n      this.PermissionListDialog = true;\n    },\n    //BRANCHES METHODS\n    renderBranches() {\n      instance.post(\"/Branches/index\").then((res) => {\n        this.dataBranches = res.data;\n      });\n    },\n    BranchesEdit(data) {\n      this.branchField = data.data.branch;\n      this.warehouseField = data.data.whscode;\n      this.branchID = data.data.id;\n      this.EditBranchDialog = true\n    },\n    UpdateBranch(){\n      let branch = this.branchField;\n      let warehouse = this.warehouseField;\n      let branchID = this.branchID;\n      this.$refs.requiredWarehouse.validate();\n      this.$refs.requiredBranch.validate();\n      if(!this.$refs.requiredWarehouse.hasError &&\n        !this.$refs.requiredBranch.hasError){\n          instance.post('/Branches/update',{\n            branch,\n            warehouse,\n            branchID\n          }).then((res)=>{\n              this.$q.notify({\n              type: \"\" + res.data.color + \"\",\n              message: \"\" + res.data.msg + \"\",\n            });\n              this.renderBranches();\n          })\n        }\n    },\n    branches() {\n      instance.get(\"/branches/get\").then((res) => {\n        let branches = [];\n        res.data.forEach((element) => {\n          branches.push({\n            label: element.branch,\n            value: element.id,\n            icon: \"house\",\n          });\n        });\n        this.BranchesList = branches;\n      });\n    },\n    CreateBranch(){ \n        this.$refs.requiredWarehouse.validate();\n        this.$refs.requiredBranch.validate();\n       if(!this.$refs.requiredWarehouse.hasError &&\n         !this.$refs.requiredBranch.hasError){\n            let branches = this.branchField;\n            let warehouse = this.warehouseField;\n            instance.post('/Branches/create',{\n                branches,\n                warehouse\n            }).then((res)=>{\n              this.$q.notify({\n              type: \"\" + res.data.color + \"\",\n              message: \"\" + res.data.msg + \"\",\n            });\n              this.renderBranches();\n            },(err)=>{\n              this.$q.notify({\n              type: \"warning\",\n              message: \"Something Wrong..!\",\n            });\n            })\n         }\n    },\n    deleteBranch(){\n       let trash = this.selectedBranches;\n       instance.post('/Branches/trash',{\n          trash\n       }).then((res)=>{\n            this.$q.notify({\n              type: \"\" + res.data.color + \"\",\n              message: \"\" + res.data.msg + \"\",\n            });\n              this.selectedBranches = [];\n              this.renderBranches();\n       },(err)=>{\n          console.log(err)\n       })\n    },\n    //END BRANCHED METHODS\n\n    //USERS METHODS\n    renderUsers() {\n      instance.post(\"/Users/index\").then((res) => {\n        this.dataUsers = res.data;\n      });\n    },\n    UsersEdit(data) {\n      this.UserUpdateID = data.data.id;\n      this.email = data.data.email;\n      this.name = data.data.name;\n      this.password = data.data.password;\n      let roleId = [];\n      data.data.roles.forEach((res) => {\n        roleId.push(res.id);\n      });\n\n      this.SelectRoles = roleId;\n      if(data.data.branches){\n      this.branch = {\n        label: data.data.branches.branch,\n        value: data.data.branch_id,\n        icon: \"house\",\n      };\n      }\n \n      this.UsersUpdateDialog = true;\n    },\n    UsersCreate() {\n      this.$refs.email.validate();\n      this.$refs.username.validate();\n      this.$refs.password.validate();\n      this.$refs.password_confirmation.validate();\n      this.$refs.RolesVal.validate();\n      this.$refs.BranchesVal.validate();\n      if (\n        !this.$refs.email.hasError &&\n        !this.$refs.username.hasError &&\n        !this.$refs.password.hasError &&\n        !this.$refs.password_confirmation.hasError &&\n        !this.$refs.BranchesVal.hasError\n      ) {\n        instance\n          .post(\"/register/user\", {\n            name: this.name,\n            email: this.email,\n            password: this.password,\n            password_confirmation: this.password_confirmation,\n            roles: this.SelectRoles,\n            branch: this.branch,\n          })\n          .then(\n            (res) => {\n              this.$q.notify({\n                type: \"\" + res.data.color + \"\",\n                message: \"\" + res.data.msg + \"\",\n              });\n              this.renderUsers();\n            },\n            (error) => {\n              this.$q.notify({\n                type: \"warning\",\n                message: \"\" + error.response.data.errors.email[0] + \"\",\n              });\n              this.$q.notify({\n                type: \"warning\",\n                message: \"\" + error.response.data.errors.name[0] + \"\",\n              });\n              this.$q.notify({\n                type: \"warning\",\n                message: \"\" + error.response.data.errors.password[0] + \"\",\n              });\n            }\n          );\n      }\n    },\n    UsersUpdate(){\n      this.$refs.email.validate();\n      this.$refs.username.validate();\n      this.$refs.RolesVal.validate();\n      this.$refs.BranchesVal.validate();\n      if (\n        !this.$refs.email.hasError &&\n        !this.$refs.username.hasError &&\n        !this.$refs.BranchesVal.hasError\n      ) {\n        instance\n          .post(\"/Users/update\", {\n            id: this.UserUpdateID,\n            name: this.name,\n            email: this.email,\n            password: this.password,\n            password_confirmation: this.password_confirmation,\n            roles: this.SelectRoles,\n            branch: this.branch,\n          })\n          .then(\n            (res) => {\n              this.$q.notify({\n                type: \"\" + res.data.color + \"\",\n                message: \"\" + res.data.msg + \"\",\n              });\n              this.renderUsers();\n            },\n            (error) => {\n              this.$q.notify({\n                type: \"warning\",\n                message: \"\" + error.response.data.errors.email[0] + \"\",\n              });\n              this.$q.notify({\n                type: \"warning\",\n                message: \"\" + error.response.data.errors.name[0] + \"\",\n              });\n              this.$q.notify({\n                type: \"warning\",\n                message: \"\" + error.response.data.errors.password[0] + \"\",\n              });\n            }\n          );\n      }\n    },\n    userDelete(){\n      let id = this.selectedUsers;\n      instance.post('/Users/trash',{\n        id\n      }).then((res)=>{\n           this.$q.notify({\n                type: \"\" + res.data.color + \"\",\n                message: \"\" + res.data.msg + \"\",\n              });\n              this.renderUsers();\n      },( )=>{\n              this.$q.notify({\n              type: \"warning\",\n              message: \"Something Wrong..!\",\n            });\n      })\n    },\n    moreRoles(data) {\n      this.RolesList = data;\n      this.RolesListDialog = true;\n    },\n    //END USERS METHODS\n    MultipleSelect() {\n      return this.selectedPermission.length === 0\n        ? \"\"\n        : `${this.selectedPermission.length} record${\n            this.selectedPermission.length > 1 ? \"s\" : \"\"\n          } selected of ${this.dataPermissions.length}`;\n    },\n\n    RoleMultipleSelect() {\n      return this.selectedRole.length === 0\n        ? \"\"\n        : `${this.selectedRole.length} record${\n            this.selectedRole.length > 1 ? \"s\" : \"\"\n          } selected of ${this.dataRoles.length}`;\n    },\n    BranchesMultipleSelect() {\n      return this.selectedBranches.length === 0\n        ? \"\"\n        : `${this.selectedBranches.length} record${\n            this.selectedBranches.length > 1 ? \"s\" : \"\"\n          } selected of ${this.dataBranches.length}`;\n    },\n    UsersMultipleSelect() {\n      return this.selectedUsers.length === 0\n        ? \"\"\n        : `${this.selectedUsers.length} record${\n            this.selectedUsers.length > 1 ? \"s\" : \"\"\n          } selected of ${this.dataUsers.length}`;\n    },\n    hasPermission(val){\n      return  this.permissions.includes(val);\n    },\n  },\n  mounted() {\n \n    this.renderPermission();\n    this.renderRole();\n    this.renderUsers();\n    this.branches();\n    this.renderBranches();\n    this.CreateRole_btn();\n    instance.post('/Users/Authorize').then((res)=>{\n     this.permissions = res.data.user_permissions;\n    })\n  },\n};\n</script>"]}]}