{"remainingRequest":"/var/www/html/new-project-portal/vue-main-front/node_modules/vue-loader/lib/index.js??vue-loader-options!/var/www/html/new-project-portal/vue-main-front/src/components/Auth/login.vue?vue&type=script&lang=js&","dependencies":[{"path":"/var/www/html/new-project-portal/vue-main-front/src/components/Auth/login.vue","mtime":1622615961726},{"path":"/var/www/html/new-project-portal/vue-main-front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/var/www/html/new-project-portal/vue-main-front/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/var/www/html/new-project-portal/vue-main-front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/var/www/html/new-project-portal/vue-main-front/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["login.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqfile":"login.vue","sourceRoot":"src/components/Auth","sourcesContent":["<template>\n  <div id=\"q-app\">\n    <q-layout view=\"lHh Lpr fff\">\n      <q-page\n        class=\"window-height window-width row justify-center items-center\"\n        style=\"background: linear-gradient(#ccebff, #99d6ff)\"\n      >\n        <div class=\"column q-pa-md\">\n          <div class=\"row\">\n            <q-card\n              square\n              class=\"shadow-24\"\n              style=\"width: 330px; height: 550px\"\n            >\n              <q-card-section class=\"bg-blue-4\">\n                <q-item-label class=\"text-white q-my-md\">{{\n                  title\n                }}</q-item-label>\n              </q-card-section>\n              <q-card-section v-if=\"take_exam == false\">\n                <!-- <q-fab\n                  color=\"primary\"\n                  @click=\"switchTypeForm\"\n                  icon=\"add\"\n                  class=\"absolute\"\n                  style=\"top: 0; right: 12px; transform: translateY(-50%)\"\n                >\n                </q-fab> -->\n                <q-form class=\"q-px-sm q-pt-xs\">\n                  <q-input\n                    ref=\"email\"\n                    square\n                    clearable\n                    v-model=\"email\"\n                    type=\"email\"\n                    lazy-rules\n                    dense\n                    :rules=\"[this.required, this.isEmail, this.short]\"\n                    label=\"Email\"\n                  >\n                    <template v-slot:prepend>\n                      <q-icon name=\"email\" />\n                    </template>\n                  </q-input>\n                  <q-input\n                    ref=\"username\"\n                    v-if=\"register\"\n                    square\n                    clearable\n                    v-model=\"name\"\n                    lazy-rules\n                    dense\n                    :rules=\"[this.required, this.short]\"\n                    type=\"username\"\n                    label=\"Username\"\n                  >\n                    <template v-slot:prepend>\n                      <q-icon name=\"person\" />\n                    </template>\n                  </q-input>\n                  <q-input\n                    ref=\"password\"\n                    square\n                    clearable\n                    v-model=\"password\"\n                    :type=\"passwordFieldType\"\n                    lazy-rules\n                    dense\n                    :rules=\"[this.required, this.short]\"\n                    label=\"Password\"\n                  >\n                    <template v-slot:prepend>\n                      <q-icon name=\"lock\" />\n                    </template>\n                    <template v-slot:append>\n                      <q-icon\n                        :name=\"visibilityIcon\"\n                        @click=\"switchVisibility\"\n                        class=\"cursor-pointer\"\n                      />\n                    </template>\n                  </q-input>\n                  <q-input\n                    ref=\"password_confirmation\"\n                    v-if=\"register\"\n                    square\n                    clearable\n                    v-model=\"password_confirmation\"\n                    :type=\"passwordFieldType\"\n                    lazy-rules\n                    dense\n                    :rules=\"[this.required, this.short, this.diffPassword]\"\n                    label=\"Password\"\n                  >\n                    <template v-slot:prepend>\n                      <q-icon name=\"lock\" />\n                    </template>\n                    <template v-slot:append>\n                      <q-icon\n                        :name=\"visibilityIcon\"\n                        @click=\"switchVisibility\"\n                        class=\"cursor-pointer\"\n                      />\n                    </template>\n                  </q-input>\n                </q-form>\n              </q-card-section>\n              <q-card-section v-if=\"take_exam == true\">\n                <q-form>\n                  <p\n                    style=\"\n                      color: green;\n                      margin-top: -10px;\n                      margin-bottom: -10px;\n                    \"\n                    v-if=\"msg.color == 'success'\"\n                  >\n                    {{ msg.msg }}\n                  </p>\n                  <p\n                    style=\"color: red; margin-top: -10px; margin-bottom: -10px\"\n                    v-if=\"msg.color == 'warning'\"\n                  >\n                    {{ msg.msg }}\n                  </p>\n           \n                  <q-input\n                    ref=\"email\"\n                    square\n                    clearable\n                    v-model=\"email\"\n                    type=\"email\"\n                    lazy-rules\n                    dense\n                    :rules=\"[this.isEmail, this.short, this.checkmail]\"\n                    label=\"Addessa Internal Email Only\"\n                  >\n                    <template v-slot:prepend>\n                      <q-icon name=\"email\" />\n                    </template>\n                  </q-input>\n                  <q-input\n                    ref=\"Full Name\"\n                    square\n                    clearable\n                    v-model=\"fullname\"\n                    lazy-rules\n                    dense\n                    :rules=\"[this.required, this.short]\"\n                    label=\"Full Name\"\n                  >\n                    <template v-slot:prepend>\n                      <q-icon name=\"person\" />\n                    </template>\n                  </q-input>\n\n                  <q-select\n                    filled\n                    v-model=\"modelModule\"\n                    :options=\"optionsModule\"\n                    use-chips\n                    stack-label\n                    label=\"Module\"\n                  />\n                  <q-select\n                    filled\n                    v-model=\"modelPosition\"\n                    :options=\"optionsPosition\"\n                    use-chips\n                    stack-label\n                    label=\"Position\"\n                  />\n                  <q-select\n                    filled\n                    v-model=\"modelBranch\"\n                    :options=\"optionsBranch\"\n                    use-chips\n                    stack-label\n                    label=\"Branch\"\n                  />\n                </q-form>\n              </q-card-section>\n\n              <q-card-actions class=\"q-px-lg\">\n                <q-btn\n                  v-if=\"take_exam == false\"\n                  unelevated\n                  size=\"lg\"\n                  color=\"secondary\"\n                  @click=\"btnLabel == 'Login' ? login() : reg()\"\n                  dense\n                  class=\"full-width text-white\"\n                  :label=\"btnLabel\"\n                />\n                <q-btn\n                  v-if=\"take_exam == true\"\n                  :disable=\"msg.color == 'success' ? false : true\"\n                  unelevated\n                  size=\"lg\"\n                  color=\"secondary\"\n                  @click=\"request()\"\n                  dense\n                  class=\"full-width text-whit\"\n                  label=\"Request Code\"\n                />\n              </q-card-actions>\n              <q-card-section v-if=\"!register\" class=\"text-center q-pa-sm\">\n                <q-btn\n                  v-if=\"take_exam == true\"\n                  color=\"secondary\"\n                  @click=\"admin()\"\n                  label=\"Admin Access\"\n                />\n                <q-btn\n                  v-if=\"take_exam == false\"\n                  color=\"secondary\"\n                  @click=\"exam()\"\n                  label=\"Take Exam\"\n                />\n                <div class=\"q-pa-sm\"></div>\n              </q-card-section>\n            </q-card>\n          </div>\n        </div>\n      </q-page>\n    </q-layout>\n  </div>\n</template>\n <script>\nimport axios from \"axios\";\nimport { QSpinnerGears } from 'quasar'\nconst token = localStorage.getItem(\"user-token\");\nconst instance = axios.create({\n  baseURL: \"http://api.laravelbackend.net/api/\",\n  headers: {\n    Authorization: \"Bearer \" + token,\n  },\n});\n\nexport default {\n  data() {\n    return {\n      title: \"Take Exam\",\n      email: \"\",\n      name: \"\",\n      password: \"\",\n      password_confirmation: \"\",\n      register: false,\n      passwordFieldType: \"password\",\n      btnLabel: \"Login\",\n      visibility: false,\n      visibilityIcon: \"visibility\",\n      take_exam: true,\n      exam_module: [],\n      modelModule: null,\n      modelBranch: null,\n      modelPosition: null,\n      optionsModule: [],\n      optionsBranch: [],\n      optionsPosition: [],\n      fullname: null,\n      msg: [],\n      success: null,\n \n    };\n  },\n\n  methods: {\n    render() {\n      instance.get(\"/create/session/contain\").then(\n        (res) => {\n          this.optionsModule = res.data.module;\n          this.optionsBranch = res.data.branches;\n          this.optionsPosition = res.data.positions;\n        },\n        (error) => {\n          console.log(error);\n        }\n      );\n    },\n    required(val) {\n      return (val && val.length > 0) || \"Please enter password\";\n    },\n    diffPassword(val) {\n      const val2 = this.$refs.password.value;\n      return (val && val === val2) || \"Password does not match!\";\n    },\n    short(val) {\n      return (val && val.length > 3) || \"The Value is to short\";\n    },\n    isEmail(val) {\n      const emailPattern = /^(?=[a-zA-Z0-9@._%+-]{6,254}$)[a-zA-Z0-9._%+-]{1,64}@(?:[a-zA-Z0-9-]{1,63}\\.){1,8}[a-zA-Z]{2,63}$/;\n      return emailPattern.test(val) || \"Please enter a valid email\";\n    },\n    checkmail() {\n      if (!this.$refs.email.hasError) {\n        this.check();\n      }\n    },\n    check() {\n      instance\n        .post(\"/request/code/checkmail\", {\n          email: this.email,\n        })\n        .then(\n          (res) => {\n            this.msg = res.data;\n            this.fullname = res.data.name;\n          },\n          () => {\n            this.msg = { msg: \"Email not found on mail DB\", color: \"warning\" };\n          }\n        );\n    },\n    submit() {\n      if (this.register) {\n        this.$refs.email.validate();\n        this.$refs.name.validate();\n        this.$refs.password.validate();\n        this.$refs.repassword.validate();\n      } else {\n        this.$refs.email.validate();\n        this.$refs.password.validate();\n      }\n\n      if (!this.register)\n        if (!this.$refs.email.hasError && !this.$refs.password.hasError) {\n          this.$q.notify({\n            icon: \"done\",\n            color: \"positive\",\n            message: \"Login\",\n          });\n        }\n    },\n    switchTypeForm() {\n      this.register = !this.register;\n      this.title = this.register ? \"Create Account\" : \"Login\";\n      this.btnLabel = this.register ? \"Register\" : \"Login\";\n    },\n    exam() {\n      this.title = \"Take Exam\";\n      this.take_exam = true;\n    },\n    admin() {\n      this.title = \"Login\";\n      this.take_exam = false;\n    },\n    switchVisibility() {\n      this.visibility = !this.visibility;\n      this.passwordFieldType = this.visibility ? \"text\" : \"password\";\n      this.visibilityIcon = this.visibility ? \"visibility_off\" : \"visibility\";\n    },\n    login() {\n      this.$refs.email.validate();\n      this.$refs.password.validate();\n      if (this.$refs.password.validate() && this.$refs.email.validate()) {\n        instance\n          .post(\"/login/user\", {\n            email: this.email,\n            password: this.password,\n          })\n          .then(\n            (resp) => {\n              const token = resp.data.access_token;\n              localStorage.setItem(\"user-token\", token); // store the token in localstorage\n\n              // you have your token, now log in your user :)\n\n              this.$router.push(\"/\");\n            },\n            (error) => {\n              this.$router.push(\"/\");\n              this.$q.notify({\n                type: \"warning\",\n                message: \"\" + error.response.data.errors.email[0] + \"\",\n              });\n\n              localStorage.removeItem(\"user-token\"); // if the request fails, remove any possible user token if possible\n            }\n          );\n      }\n    },\n    request() {\n      this.msg = {color: \"sending\" };\n      this.notify();\n      instance\n        .post(\"/request/exam/code\", {\n          email: this.email,\n          fullname: this.fullname,\n          module: this.modelModule,\n          position: this.modelPosition,\n          branch: this.modelBranch,\n          \n        })\n        .then((res) => {\n          this.$q.notify({\n            type: \"\" + res.data[0].color + \"\",\n            message: \"\" + res.data[0].msg + \"\",\n            timeout: 50000\n          });\n          this.msg = {color: \"success\" };\n        \n        });\n    },\n    notify(){\n      this.$q.notify({\n            spinner: QSpinnerGears,\n            message: 'Working...',\n            timeout: 13000\n          })\n    },\n    reg() {\n      instance\n        .post(\"/register/user\", {\n          name: this.name,\n          email: this.email,\n          password: this.password,\n          password_confirmation: this.password_confirmation,\n        })\n        .then(\n          () => {\n            this.$router.push(\"/\");\n          },\n          (error) => {\n            this.$q.notify({\n              type: \"warning\",\n              message: \"\" + error.response.data.errors.email[0] + \"\",\n            });\n            this.$q.notify({\n              type: \"warning\",\n              message: \"\" + error.response.data.errors.name[0] + \"\",\n            });\n            this.$q.notify({\n              type: \"warning\",\n              message: \"\" + error.response.data.errors.password[0] + \"\",\n            });\n          }\n        );\n    },\n  },\n  mounted() {\n    this.render();\n \n  },\n};\n</script>\n "]}]}